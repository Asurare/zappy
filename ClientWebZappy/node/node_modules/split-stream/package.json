{
  "_args": [
    [
      {
        "name": "split-stream",
        "raw": "split-stream",
        "rawSpec": "",
        "scope": null,
        "spec": "latest",
        "type": "tag"
      },
      "/home/coiffa_c/PSU_2015_zappy/ClientWebZappy/node"
    ]
  ],
  "_from": "split-stream@latest",
  "_id": "split-stream@0.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/split-stream",
  "_npmUser": {
    "email": "sasaplus1@gmail.com",
    "name": "sasaplus1"
  },
  "_npmVersion": "1.2.14",
  "_phantomChildren": {},
  "_requested": {
    "name": "split-stream",
    "raw": "split-stream",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/split-stream/-/split-stream-0.2.0.tgz",
  "_shasum": "430f966ac52b7888411924912081b719de6015ae",
  "_shrinkwrap": null,
  "_spec": "split-stream",
  "_where": "/home/coiffa_c/PSU_2015_zappy/ClientWebZappy/node",
  "author": {
    "email": "sasaplus1@gmail.com",
    "name": "sasa+1"
  },
  "bugs": {
    "url": "https://github.com/sasaplus1/split-stream/issues"
  },
  "dependencies": {},
  "description": "stream of split strings",
  "devDependencies": {
    "mocha": "~1.8"
  },
  "directories": {},
  "dist": {
    "shasum": "430f966ac52b7888411924912081b719de6015ae",
    "tarball": "https://registry.npmjs.org/split-stream/-/split-stream-0.2.0.tgz"
  },
  "homepage": "https://github.com/sasaplus1/split-stream#readme",
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "email": "sasaplus1@gmail.com",
      "name": "sasaplus1"
    }
  ],
  "name": "split-stream",
  "optionalDependencies": {},
  "readme": "# split-stream  [![Build Status](https://travis-ci.org/sasaplus1/split-stream.png)](https://travis-ci.org/sasaplus1/split-stream)\n\nstream of split strings\n\n## Installation\n\n```sh\n$ npm install split-stream\n```\n\n## Usage\n\n```js\nvar fs = require('fs'),\n    splitStream = require('split-stream'),\n    ss = splitStream.create();\n\nfs.createReadStream('./file').pipe(ss).pipe(process.stdout);\n```\n\n### stream2\n\n```js\nvar fs = require('fs'),\n    splitStream = require('split-stream').SplitStream2,\n    ss = splitStream.create();\n\nss.on('readable', function() {\n  var buf;\n\n  while ((buf = ss.read(1)) !== null) {\n    console.log(buf);\n  }\n});\nss.on('end', function() {\n  console.log('end');\n});\n\nfs.createReadStream('./index.js').pipe(ss);\n```\n\n### old-style stream\n\n```js\nvar fs = require('fs'),\n    splitStream = require('split-stream').SplitStream1,\n    ss = splitStream.create({\n      splitStr: '\\t'\n    });\n\nss.setEncoding('utf8');\n\nss.on('data', function(data) {\n  console.log(data);\n});\nss.on('end', function() {\n  ss.destory();\n});\nss.on('close', function() {\n  console.log('close');\n});\n\nfs.createReadStream('./file').pipe(ss);\n```\n\n## Class\n\n### SplitStream\n\nclass of SplitStream1 or SplitStream2.\n\n```js\nvar splitStream = require('split-stream');\n\n// true if over version 0.9.\n(splitStream === splitStream.SplitStream2);\n\n// true if over version 0.8.\n(splitStream === splitStream.SplitStream2);\n```\n\n### SplitStream2\n\ninherited stream2 class.\n\n## Function (SplitStream2)\n\n### create(options)\n\n* `` object - options object\n\n* `return` SplitStream2 - SplitStream2\n\nthrow TypeError if options.splitStr is not string or regexp types.\n\nobjectMode and decodeStrings are always true.\n\n#### options\n\n* `splitStr` string or regexp - split string\n\ndefault value is `/\\r?\\n/`.\n\n* `encoding` string - encoding\n\ndefault value is `utf8`. this value is argument of string_decoder.\n\n### SplitStream1\n\ninherited old-style stream class.\n\n## Function (SplitStream1)\n\n### create(options)\n\n* `options` object - option object\n\n* `return` SplitStream1 - SplitStream1\n\nthrow TypeError if options.splitStr is not string or regexp types.\n\n#### options\n\n* `splitStr` string or regexp - split string\n\ndefault value is `/\\r?\\n/`.\n\n## Events (SplitStream1)\n\n### close\n\ncalled destroy().\n\n### data\n\n* `data` string - split string\n\nuntil buffer is empty.\n\n### drain\n\nwhen buffer is empty.\n\n### end\n\ncall after end() and when buffer is empty.\n\n### error\n\n* `error` Error - error object\n\ncall twice destory() or call write() after end().\n\n## Test\n\n```sh\n$ npm install\n$ npm test\n```\n\n## License\n\nThe MIT License. Please see LICENSE file.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sasaplus1/split-stream.git"
  },
  "scripts": {
    "fix": "fixjsstyle --strict --nojsdoc -r ./lib -r ./test ./index.js",
    "lint": "gjslint --strict --nojsdoc -r ./lib -r ./test ./index.js",
    "test": "./node_modules/.bin/mocha"
  },
  "version": "0.2.0"
}
